'use client';

import { MapContainer, TileLayer, ImageOverlay, Marker, Popup } from 'react-leaflet';
import { LatLngBounds } from 'leaflet';
import 'leaflet/dist/leaflet.css';

export default function RainForecastMap({ radarData }) {
  const { imageUrl, bounds } = radarData;

  if (!imageUrl || !bounds) return null;

  return (
    // üí° ‡πÉ‡∏´‡πâ container ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 100vh
    <div style={{ height: '100vh', width: '100%' }}>
      <MapContainer
        bounds={new LatLngBounds(bounds)}
        scrollWheelZoom={true}
        style={{ height: '100%', width: '100%' }}
      >
        {/* ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å OpenStreetMap */}
        <TileLayer
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
          attribution="¬© OpenStreetMap contributors"
        />

        {/* Overlay ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏î‡∏≤‡∏£‡πå */}
        <ImageOverlay
          url={imageUrl}
          bounds={new LatLngBounds(bounds)}
          opacity={0.5}
        />

        {/* ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ */}
        <Marker position={[17.82, 98.37]}>
          <Popup>‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡πÄ‡∏£‡∏î‡∏≤‡∏£‡πå‡∏≠‡∏°‡∏Å‡πã‡∏≠‡∏¢</Popup>
        </Marker>
      </MapContainer>
    </div>
  );
}
